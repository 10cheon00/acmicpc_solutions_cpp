/*
 * 2780 비밀번호
 * 실버I
1->2,4
5->2,4,6,8
7->4,8,0
...
7에서 N번 이동했을 때는
  4에서 N-1번 이동했을 때 +
  8에서 N-1번 이동했을 때 +
  0에서 N-1번 이동했을 때다.

어떤 위치에서 N번 이동했을 때 경우의 수...
    1   2   3   4   5   6   7   8   9   0
 1  1   1   1   1   1   1   1   1   1   1
 2  2   3   2   3   4   3   3   3   2   1
 3  6   8   6   9  12   8   7   9   6   3
 ...
*/
#include <iostream>
int dp[1001][11]{0};
int d[11][5] = {{0},       {2, 4},       {1, 3, 5}, {2, 6},
                {1, 5, 7}, {2, 4, 6, 8}, {3, 5, 9}, {4, 8, 10},
                {5, 7, 9}, {6, 8},       {7}};
int main() {
  int T;
  scanf("%d", &T);
  for (int i = 1; i < 11; i++) {
    dp[1][i] = 1;
  }
  for (int i = 2; i <= 1000; i++) {
    for (int j = 1; j < 11; j++) {
      for (int k = 0; d[j][k]; k++) {
        dp[i][j] += dp[i - 1][d[j][k]] % 1234567;
      }
    }
  }
  for (int i = 0; i < T; i++) {
    int N;
    scanf("%d", &N);
    int res = 0;
    for (int i = 1; i < 11; i++) {
      res += dp[N][i];
    }
    printf("%d\n", res % 1234567);
  }
}
