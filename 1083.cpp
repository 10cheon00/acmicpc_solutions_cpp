/*
뒤에서부터 더 큰 수를 앞으로 보내기? 스왑 횟수에 제한이 있음
뒤에서부터 탐색하되, 현재 위치에 있는 수를 제일 앞으로 보낼 수 있는지 생각하려면
 현재 위치에 있는 수가 앞에 있는 수들 중에 가장 큰 수여야 함
S=2
3 5 1 2 4
^^^^^
5 3 1 2 4
더이상 제일 앞으로 보낼 때 순서가 바뀌는 경우가 없음
첫번째 위치가 고정되었으므로 나머지 위치에서 탐색
x 3 1 2 4
  ^^^
x x 1 2 4
    ^^^

배열 길이보다 S가 더 클 수 있음
S=10
3 5 1 2 4
^^^^^^^^^
5 3 1 2 4
  ^^^^^^^
5 4 3 1 2
    ^^^^^
S=4
3 5 1 2 4
^^^^^^^^^
4는 범위안에서 가장 큰 수가 아니니까 5를 선택
5 3 1 2 4, s=3
  ^^^^^^^
여기에서 4가 가 장 큰 수
5 4 3 1 2, s=0
*/
#include <iostream>
using namespace std;
int main() {
    int N, S, arr[50], i = 0, j, k, l, m;
    cin >> N;
    for (i = 0; i < N; i++) {
        cin >> arr[i];
    }
    cin >> S;
    i = 0;
    while (S > 0 && i < N) {
        // 제일 앞으로 보낼 수 있는 범위 설정
        j = i;
        k = i+S >= N ? N-1 : i+S;
        // 범위 내에서 최대값 찾기
        m = j;
        for (l=j;l<=k;l++) {
            m = arr[m] > arr[l] ? m : l;
        }
        // 최대값을 앞으로 보내고, 스왑한 횟수만큼 S 차감
        while (m > j) {
            int t = arr[m];
            arr[m] = arr[m-1];
            arr[m-1] = t;
            S--;
            m--;
        }
        i++;
    }
    for (l=0;l<N;l++) {
        cout << arr[l] << ' ';
    }
}
